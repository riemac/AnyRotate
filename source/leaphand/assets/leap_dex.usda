#usda 1.0
(
    customLayerData = {
        dictionary cameraSettings = {
            dictionary Front = {
                double3 position = (5, 0, 0)
                double radius = 5
            }
            dictionary Perspective = {
                double3 position = (1.4449534777061608, 1.1310361086172411, 0.2665800990952799)
                double3 target = (-0.2413668818561614, -0.12056779775223414, -0.12271195475989488)
            }
            dictionary Right = {
                double3 position = (0, -5, 0)
                double radius = 5
            }
            dictionary Top = {
                double3 position = (0, 0, 5)
                double radius = 5
            }
            string boundCamera = "/OmniverseKit_Persp"
        }
        dictionary omni_layer = {
            string authoring_layer = "./leap_dex.usda"
            dictionary locked = {
            }
            dictionary muteness = {
            }
        }
        dictionary renderSettings = {
        }
    }
    defaultPrim = "World"
    endTimeCode = 1000000
    metersPerUnit = 1
    startTimeCode = 0
    timeCodesPerSecond = 60
    upAxis = "Z"
)

def Xform "World"
{
    def Xform "default_environment" (
        prepend references = @../../../../isaacsim_assets/Assets/Isaac/5.0/Isaac/Environments/Grid/default_environment.usd@
    )
    {
    }

    def "leap_hand_right" (
        prepend payload = @../../../../LEAP_Hand_Isaac_Lab/source/LEAP_Isaaclab/LEAP_Isaaclab/assets/leap_hand_v1_right/leap_hand_right.usd@
    )
    {
        quatd xformOp:orient = (0.7071067811865476, 0, -0.7071067811865475, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.13575423541393272, 0.08200579346326832, 0.19436243220657132)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "base" (
            prepend apiSchemas = ["PhysxRigidBodyAPI"]
        )
        {
            bool physxRigidBody:disableGravity = 1

            def PhysicsFixedJoint "FixedJoint"
            {
                rel physics:body0 = </World>
                rel physics:body1 = </World/leap_hand_right/base>
                float physics:breakForce = inf
                float physics:breakTorque = inf
                point3f physics:localPos0 = (0.13575505, 0.082006365, 0.1943654)
                point3f physics:localPos1 = (0, 0, 0)
                quatf physics:localRot0 = (-0.70710224, 9.106696e-7, 0.7071113, -0.0000016530972)
                quatf physics:localRot1 = (1, 0, 0, 0)
            }
        }

        over "mcp_joint" (
            prepend apiSchemas = ["PhysxRigidBodyAPI"]
        )
        {
            bool physxRigidBody:disableGravity = 1
        }

        over "pip" (
            prepend apiSchemas = ["PhysxRigidBodyAPI"]
        )
        {
            bool physxRigidBody:disableGravity = 1
        }

        over "dip" (
            prepend apiSchemas = ["PhysxRigidBodyAPI"]
        )
        {
            bool physxRigidBody:disableGravity = 1
        }

        over "fingertip" (
            prepend apiSchemas = ["PhysxRigidBodyAPI"]
        )
        {
            bool physxRigidBody:disableGravity = 1
        }

        over "thumb_temp_base" (
            prepend apiSchemas = ["PhysxRigidBodyAPI"]
        )
        {
            bool physxRigidBody:disableGravity = 1
        }

        over "thumb_pip" (
            prepend apiSchemas = ["PhysxRigidBodyAPI"]
        )
        {
            bool physxRigidBody:disableGravity = 1
        }

        over "thumb_dip" (
            prepend apiSchemas = ["PhysxRigidBodyAPI"]
        )
        {
            bool physxRigidBody:disableGravity = 1
        }

        over "thumb_fingertip" (
            prepend apiSchemas = ["PhysxRigidBodyAPI"]
        )
        {
            bool physxRigidBody:disableGravity = 1
        }

        over "mcp_joint_2" (
            prepend apiSchemas = ["PhysxRigidBodyAPI"]
        )
        {
            bool physxRigidBody:disableGravity = 1
        }

        over "pip_2" (
            prepend apiSchemas = ["PhysxRigidBodyAPI"]
        )
        {
            bool physxRigidBody:disableGravity = 1
        }

        over "dip_2" (
            prepend apiSchemas = ["PhysxRigidBodyAPI"]
        )
        {
            bool physxRigidBody:disableGravity = 1
        }

        over "fingertip_2" (
            prepend apiSchemas = ["PhysxRigidBodyAPI"]
        )
        {
            bool physxRigidBody:disableGravity = 1
        }

        over "mcp_joint_3" (
            prepend apiSchemas = ["PhysxRigidBodyAPI"]
        )
        {
            bool physxRigidBody:disableGravity = 1
        }

        over "pip_3" (
            prepend apiSchemas = ["PhysxRigidBodyAPI"]
        )
        {
            bool physxRigidBody:disableGravity = 1
        }

        over "dip_3" (
            prepend apiSchemas = ["PhysxRigidBodyAPI"]
        )
        {
            bool physxRigidBody:disableGravity = 1
        }

        over "fingertip_3" (
            prepend apiSchemas = ["PhysxRigidBodyAPI"]
        )
        {
            bool physxRigidBody:disableGravity = 1
        }

        over "joints" (
            prepend apiSchemas = ["PhysicsArticulationRootAPI", "PhysxArticulationAPI"]
        )
        {
            over "a_1"
            {
                float state:angular:physics:position = 0
                float state:angular:physics:velocity = 0
            }

            over "a_12"
            {
                float state:angular:physics:position = 0
                float state:angular:physics:velocity = 0
            }

            over "a_5"
            {
                float state:angular:physics:position = 0
                float state:angular:physics:velocity = 0
            }

            over "a_9"
            {
                float state:angular:physics:position = 0
                float state:angular:physics:velocity = 0
            }

            over "a_0"
            {
                float state:angular:physics:position = 0
                float state:angular:physics:velocity = 0
            }

            over "a_13"
            {
                float state:angular:physics:position = 0
                float state:angular:physics:velocity = 0
            }

            over "a_4"
            {
                float state:angular:physics:position = 0
                float state:angular:physics:velocity = 0
            }

            over "a_8"
            {
                float state:angular:physics:position = 0
                float state:angular:physics:velocity = 0
            }

            over "a_2"
            {
                float state:angular:physics:position = 0
                float state:angular:physics:velocity = 0
            }

            over "a_14"
            {
                float state:angular:physics:position = 0
                float state:angular:physics:velocity = 0
            }

            over "a_6"
            {
                float state:angular:physics:position = 0
                float state:angular:physics:velocity = 0
            }

            over "a_10"
            {
                float state:angular:physics:position = 0
                float state:angular:physics:velocity = 0
            }

            over "a_3"
            {
                float state:angular:physics:position = 0
                float state:angular:physics:velocity = 0
            }

            over "a_15"
            {
                float state:angular:physics:position = 0
                float state:angular:physics:velocity = 0
            }

            over "a_7"
            {
                float state:angular:physics:position = 0
                float state:angular:physics:velocity = 0
            }

            over "a_11"
            {
                float state:angular:physics:position = 0
                float state:angular:physics:velocity = 0
            }
        }
    }

    def "dex_cube_instanceable" (
        prepend payload = @../../../../isaacsim_assets/Assets/Isaac/5.0/Isaac/Props/Blocks/DexCube/dex_cube_instanceable.usd@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.09902918795639575, 0.07447292202520929, 0.2764033670388809)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "ur5" (
        prepend payload = @../../../../isaacsim_assets/Assets/Isaac/5.0/Isaac/Robots/UniversalRobots/ur5/ur5.usd@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.06411536782979965, 0.3789006471633911, 0.21667626864471431)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "base_link"
        {
        }

        over "shoulder_link"
        {
        }

        over "upper_arm_link"
        {
        }

        over "forearm_link"
        {
            string isaac:nameOverride (
                displayName = "Name Override"
                doc = "Name override for prim lookup in base name search"
            )
        }

        over "wrist_1_link"
        {
        }

        over "wrist_2_link"
        {
        }

        over "wrist_3_link"
        {
            string isaac:nameOverride (
                displayName = "Name Override"
                doc = "Name override for prim lookup in base name search"
            )

            over "flange"
            {
                def "leap_hand_right" (
                    prepend payload = @file:/home/hac/isaac/LEAP_Hand_Isaac_Lab/source/LEAP_Isaaclab/LEAP_Isaaclab/assets/leap_hand_v1_right/leap_hand_right.usd@
                )
                {
                    quatd xformOp:orient = (0.7071067811865476, -0.7071067811865475, 0, 0)
                    double3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0.010747892383468516, -0.04490722993126428, 0.006189469255313718)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                    over "base" (
                        prepend apiSchemas = ["PhysxRigidBodyAPI"]
                    )
                    {
                        bool physxRigidBody:disableGravity = 1

                        def PhysicsFixedJoint "FixedJoint"
                        {
                            rel physics:body0 = </World>
                            rel physics:body1 = </World/ur5/wrist_3_link/flange/leap_hand_right/base>
                            float physics:breakForce = inf
                            float physics:breakTorque = inf
                            point3f physics:localPos0 = (0.13575505, 0.082006365, 0.1943654)
                            point3f physics:localPos1 = (0.000002964889, -0.70471805, -8.117882e-7)
                            quatf physics:localRot0 = (-0.70710224, 9.106696e-7, 0.7071113, -0.0000016530972)
                            quatf physics:localRot1 = (1, 5.2497563e-7, -0.000006473523, 0.000001812857)
                        }
                    }

                    over "mcp_joint" (
                        prepend apiSchemas = ["PhysxRigidBodyAPI"]
                    )
                    {
                        bool physxRigidBody:disableGravity = 1
                    }

                    over "pip" (
                        prepend apiSchemas = ["PhysxRigidBodyAPI"]
                    )
                    {
                        bool physxRigidBody:disableGravity = 1
                    }

                    over "dip" (
                        prepend apiSchemas = ["PhysxRigidBodyAPI"]
                    )
                    {
                        bool physxRigidBody:disableGravity = 1
                    }

                    over "fingertip" (
                        prepend apiSchemas = ["PhysxRigidBodyAPI"]
                    )
                    {
                        bool physxRigidBody:disableGravity = 1
                    }

                    over "thumb_temp_base" (
                        prepend apiSchemas = ["PhysxRigidBodyAPI"]
                    )
                    {
                        bool physxRigidBody:disableGravity = 1
                    }

                    over "thumb_pip" (
                        prepend apiSchemas = ["PhysxRigidBodyAPI"]
                    )
                    {
                        bool physxRigidBody:disableGravity = 1
                    }

                    over "thumb_dip" (
                        prepend apiSchemas = ["PhysxRigidBodyAPI"]
                    )
                    {
                        bool physxRigidBody:disableGravity = 1
                    }

                    over "thumb_fingertip" (
                        prepend apiSchemas = ["PhysxRigidBodyAPI"]
                    )
                    {
                        bool physxRigidBody:disableGravity = 1
                    }

                    over "mcp_joint_2" (
                        prepend apiSchemas = ["PhysxRigidBodyAPI"]
                    )
                    {
                        bool physxRigidBody:disableGravity = 1
                    }

                    over "pip_2" (
                        prepend apiSchemas = ["PhysxRigidBodyAPI"]
                    )
                    {
                        bool physxRigidBody:disableGravity = 1
                    }

                    over "dip_2" (
                        prepend apiSchemas = ["PhysxRigidBodyAPI"]
                    )
                    {
                        bool physxRigidBody:disableGravity = 1
                    }

                    over "fingertip_2" (
                        prepend apiSchemas = ["PhysxRigidBodyAPI"]
                    )
                    {
                        bool physxRigidBody:disableGravity = 1
                    }

                    over "mcp_joint_3" (
                        prepend apiSchemas = ["PhysxRigidBodyAPI"]
                    )
                    {
                        bool physxRigidBody:disableGravity = 1
                    }

                    over "pip_3" (
                        prepend apiSchemas = ["PhysxRigidBodyAPI"]
                    )
                    {
                        bool physxRigidBody:disableGravity = 1
                    }

                    over "dip_3" (
                        prepend apiSchemas = ["PhysxRigidBodyAPI"]
                    )
                    {
                        bool physxRigidBody:disableGravity = 1
                    }

                    over "fingertip_3" (
                        prepend apiSchemas = ["PhysxRigidBodyAPI"]
                    )
                    {
                        bool physxRigidBody:disableGravity = 1
                    }

                    over "joints" (
                        prepend apiSchemas = ["PhysicsArticulationRootAPI", "PhysxArticulationAPI"]
                    )
                    {
                        over "a_1"
                        {
                            float state:angular:physics:position = 2.2702465
                            float state:angular:physics:velocity = -4.902304
                        }

                        over "a_12"
                        {
                            float state:angular:physics:position = 0.3973305
                            float state:angular:physics:velocity = 91.16534
                        }

                        over "a_5"
                        {
                            float state:angular:physics:position = 1.8374821
                            float state:angular:physics:velocity = -28.262796
                        }

                        over "a_9"
                        {
                            float state:angular:physics:position = -2.2755573
                            float state:angular:physics:velocity = 469.9502
                        }

                        over "a_0"
                        {
                            float state:angular:physics:position = 2.2197242
                            float state:angular:physics:velocity = -41.48379
                        }

                        over "a_13"
                        {
                            float state:angular:physics:position = 5.457897
                            float state:angular:physics:velocity = 447.23596
                        }

                        over "a_4"
                        {
                            float state:angular:physics:position = 2.258329
                            float state:angular:physics:velocity = -42.39788
                        }

                        over "a_8"
                        {
                            float state:angular:physics:position = 2.1789863
                            float state:angular:physics:velocity = -24.454967
                        }

                        over "a_2"
                        {
                            float state:angular:physics:position = 0.5276788
                            float state:angular:physics:velocity = 69.67899
                        }

                        over "a_14"
                        {
                            float state:angular:physics:position = 93.287056
                            float state:angular:physics:velocity = -484.4471
                        }

                        over "a_6"
                        {
                            float state:angular:physics:position = 0.33047637
                            float state:angular:physics:velocity = 45.854588
                        }

                        over "a_10"
                        {
                            float state:angular:physics:position = 2.1161494
                            float state:angular:physics:velocity = 48.640564
                        }

                        over "a_3"
                        {
                            float state:angular:physics:position = 0.011449469
                            float state:angular:physics:velocity = 13.204976
                        }

                        over "a_15"
                        {
                            float state:angular:physics:position = -0.041339442
                            float state:angular:physics:velocity = 0.04924353
                        }

                        over "a_7"
                        {
                            float state:angular:physics:position = -0.0260711
                            float state:angular:physics:velocity = 6.467253
                        }

                        over "a_11"
                        {
                            float state:angular:physics:position = 0.09775341
                            float state:angular:physics:velocity = 26.155304
                        }
                    }

                    def PhysicsFixedJoint "FixedJoint"
                    {
                        rel physics:body0 = </World/ur5/wrist_3_link/flange>
                        rel physics:body1 = </World/ur5/wrist_3_link/flange/leap_hand_right>
                        float physics:breakForce = inf
                        float physics:breakTorque = inf
                        point3f physics:localPos0 = (0.012433628, -0.024436299, 0.008722267)
                        point3f physics:localPos1 = (0, 0, 0)
                        quatf physics:localRot0 = (-0.70710677, 0.70710677, 8.509999e-9, -4.839809e-9)
                        quatf physics:localRot1 = (1, 0, 0, 0)
                    }
                }
            }
        }

        over "joints" (
            prepend apiSchemas = ["PhysicsArticulationRootAPI", "PhysxArticulationAPI"]
        )
        {
            over "shoulder_pan_joint"
            {
                custom string isaac:nameOverride (
                    displayName = "Name Override"
                    doc = "Name override for prim lookup in base name search"
                )
                float state:angular:physics:position = 0
                float state:angular:physics:velocity = 0
            }

            over "shoulder_lift_joint"
            {
                custom string isaac:nameOverride (
                    displayName = "Name Override"
                    doc = "Name override for prim lookup in base name search"
                )
                float state:angular:physics:position = 0
                float state:angular:physics:velocity = 0
            }

            over "elbow_joint"
            {
                float drive:angular:physics:targetPosition = -11.8
                custom string isaac:nameOverride (
                    displayName = "Name Override"
                    doc = "Name override for prim lookup in base name search"
                )
                float state:angular:physics:position = 0
                float state:angular:physics:velocity = 0
            }

            over "wrist_1_joint"
            {
                custom string isaac:nameOverride (
                    displayName = "Name Override"
                    doc = "Name override for prim lookup in base name search"
                )
                float state:angular:physics:position = 0
                float state:angular:physics:velocity = 0
            }

            over "wrist_2_joint"
            {
                float state:angular:physics:position = 0
                float state:angular:physics:velocity = 0
            }

            over "wrist_3_joint"
            {
                custom string isaac:nameOverride (
                    displayName = "Name Override"
                    doc = "Name override for prim lookup in base name search"
                )
                float state:angular:physics:position = 0
                float state:angular:physics:velocity = 0
            }
        }

        over "root_joint"
        {
            custom string isaac:nameOverride (
                displayName = "Name Override"
                doc = "Name override for prim lookup in base name search"
            )
        }
    }
}

def Xform "Environment"
{
    quatd xformOp:orient = (1, 0, 0, 0)
    double3 xformOp:scale = (1, 1, 1)
    double3 xformOp:translate = (0, 0, 0)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

    def DistantLight "defaultLight" (
        prepend apiSchemas = ["ShapingAPI"]
    )
    {
        float inputs:angle = 1
        float inputs:intensity = 3000
        float inputs:shaping:cone:angle = 180
        float inputs:shaping:cone:softness
        float inputs:shaping:focus
        color3f inputs:shaping:focusTint
        asset inputs:shaping:ies:file
        quatd xformOp:orient = (0.6532814824381883, 0.2705980500730985, 0.27059805007309845, 0.6532814824381882)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }
}

over "Render" (
    hide_in_stage_window = true
)
{
}

